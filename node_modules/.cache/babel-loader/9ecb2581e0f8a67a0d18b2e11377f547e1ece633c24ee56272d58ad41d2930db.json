{"ast":null,"code":"var _jsxFileName = \"/home/bertolottipf/csvvaled/src/Components/Help.js\";\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Help extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Help\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Validation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Let's assume that we have a large csv with column headings each of which has a specific request and we need to check the data, you can do this by setting up such a formatted csv file:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The name of the garment (must be the same as the fields defined in the first row of the data file)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"choose L, R, S, SI, U, UI (Length, Regex, Choice, ChoiceIgnorecase, Equality, EqualityIgnorecase)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Comparison (<, <=, =, > =, >, used only for Length\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Value, the value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Let's see an examples:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n        children: [\"\\\"name\\\",\\\"L\\\",\\\"<\\\",\\\"10\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 43\n        }, this), \"\\\"surname\\\",\\\"L\\\",\\\">\\\",\\\"10\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 31\n        }, this), \"\\\"age\\\"\\\\,\\\"R\\\",\\\"\\\",\\\"\\\\\\\\d\", (1, 3), \"\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 30\n        }, this), \"\\\"sex\\\",\\\"SI\\\",\\\"\\\",\\\"F|M\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), \"\\\"programmer\\\",\\\"U\\\",\\\"\\\",\\\"bertolottipf\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), \" must be length less then ten characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 75\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"surname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), \" also must be length less then ten characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 83\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), \" must have from 1 to 3 numbers.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 64\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"sex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), \"  must be \\\"M\\\" or \\\"F\\\" but can also be in lowercase.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 83\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"programmer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), \" must be \\\"bertolottipf\\\".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Into the spreadsheet you can copy cells with \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"CTRL + mouse click\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 74\n          }, this), \" (also dropping that one) and move from cells with \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"CTRL + ALT + arrow buttons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 152\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 198\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Right click on number rows can be usefull to delete rows.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Validator generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Clicking \\\"Generate new one\\\" beside \\\"File VAL\\\" file selector, it's possible generate a new file validator. Right-mouse-click can be usefull to delete or edit regulars espressions and columns.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default Help;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Help","Component","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/bertolottipf/csvvaled/src/Components/Help.js"],"sourcesContent":["import * as React from \"react\";\n\nclass Help extends React.Component {\n    render() {\n        return (\n            <>\n                <h2>Help</h2>\n\n                <h6>Validation</h6>\n                <p>Let's assume that we have a large csv with column headings each of which has a specific request\n\t\t\t\tand we need to check the data, you can do this by setting up such a formatted csv file:</p>\n\n                <ul>\n                    <li>The name of the garment (must be the same as the fields defined in the first row of the data file)</li>\n                    <li>choose L, R, S, SI, U, UI (Length, Regex, Choice, ChoiceIgnorecase, Equality, EqualityIgnorecase)</li>\n                    <li>Comparison (&lt;, &lt;=, =, &gt; =, &gt;, used only for Length</li>\n                    <li>Value, the value</li>\n                </ul>\n                <br />\n\n                <p>Let's see an examples:</p>\n\n                <code>\n                    \"name\",\"L\",\"&lt;\",\"10\"<br />\n\t\t\t\t\t\"surname\",\"L\",\"&gt;\",\"10\"<br />\n\t\t\t\t\t\"age\"\\,\"R\",\"\",\"\\\\d{1,3}\"<br />\n\t\t\t\t\t\"sex\",\"SI\",\"\",\"F|M\"<br />\n\t\t\t\t\t\"programmer\",\"U\",\"\",\"bertolottipf\"\n\t\t\t\t</code><br /><br />\n\n                <p>\n                    <em>name</em> must be length less then ten characters.<br />\n                    <em>surname</em> also must be length less then ten characters.<br />\n                    <em>age</em> must have from 1 to 3 numbers.<br />\n                    <em>sex</em>  must be \"M\" or \"F\" but can also be in lowercase.<br />\n                    <em>programmer</em> must be \"bertolottipf\".\n\t\t\t\t</p>\n\n                <p>\n                    <strong>Into the spreadsheet you can copy cells with <em>CTRL + mouse click</em> (also dropping that one) and move from cells with <em>CTRL + ALT + arrow buttons</em>.</strong> <br />\n                    <strong>Right click on number rows can be usefull to delete rows.</strong>\n                </p>\n\n\n                <h6>Validator generator</h6>\n\n                <p><strong>Clicking \"Generate new one\" beside \"File VAL\" file selector, it's possible generate a new file validator. Right-mouse-click can be usefull to delete or edit regulars espressions and columns.</strong></p>\n            </>\n        );\n    }\n}\n\nexport default Help;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}